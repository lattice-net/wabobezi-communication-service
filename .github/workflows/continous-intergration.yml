name: Continuous Integration
on: [workflow_dispatch]
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: retrieve code
        run: echo " {{ toJSON(github.event) }} "
      - name: checkout code
        uses: actions/checkout@v3
      - name: cache and restore dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: install dependencies
        run: npm install
      - name: run prisma generate dev
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: npx prisma migrate dev --preview-feature
      - name: execute tests
        run: |
          npm run test
          npm run test:e2e
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: retrieve code
        uses: actions/checkout@v3
      - name: node setup
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: cache dependencies
        uses: actions/cache@v3
        with:
          key: ~/.npm
          path: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: install dependencies and build
        run: |
          npm install
          npm run build
      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: |
            .env
            dist
            prisma
            package.json
            tsconfig.json
            tsconfig.build.jso
